<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="app_territories">
  <resultMap class="com.mobicart.model.AppTerritory" id="baseResultMap">
    <result column="app_id" jdbcType="BIGINT" property="appId" />
    <result column="territory_id" jdbcType="BIGINT" property="territoryId" />
  </resultMap>
  <sql id="example_Where_Clause">
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="selectByExample" parameterClass="com.mobicart.model.AppTerritoryExample" resultMap="baseResultMap">
    select app_id, territory_id
    from app_territories
    <isParameterPresent>
      <include refid="app_territories.example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  
  
  <select id="selectByAppId" parameterClass="long" resultMap="baseResultMap">
    select app_id, territory_id
    from app_territories
    where app_id=#value#	
  </select>
  
  
  
  <delete id="deleteByExample" parameterClass="com.mobicart.model.AppTerritoryExample">
    delete from app_territories
    <include refid="app_territories.example_Where_Clause" />
  </delete>

  <insert id="insert" parameterClass="com.mobicart.model.AppTerritory">
    insert into app_territories (app_id, territory_id)
    values (#appId:BIGINT#, #territoryId:BIGINT#)
  </insert>

  <insert id="insertSelective" parameterClass="com.mobicart.model.AppTerritory">
    insert into app_territories
    <dynamic prepend="(">
      <isNotNull prepend="," property="appId">
        app_id
      </isNotNull>
      <isNotNull prepend="," property="territoryId">
        territory_id
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(">
      <isNotNull prepend="," property="appId">
        #appId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="territoryId">
        #territoryId:BIGINT#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="countByExample" parameterClass="com.mobicart.model.AppTerritoryExample" resultClass="java.lang.Integer">
    select count(*) from app_territories
    <include refid="app_territories.example_Where_Clause" />
  </select>
  
  <update id="updateByExampleSelective">
    update app_territories
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.appId">
        app_id = #record.appId:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.territoryId">
        territory_id = #record.territoryId:BIGINT#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="app_territories.example_Where_Clause" />
    </isParameterPresent>
  </update>

  <update id="updateByExample">
    update app_territories
    set app_id = #record.appId:BIGINT#,
      territory_id = #record.territoryId:BIGINT#
    <isParameterPresent>
      <include refid="app_territories.example_Where_Clause" />
    </isParameterPresent>
  </update>
  
  <procedure id="insertDefaulStates" resultClass="java.lang.String" parameterClass="java.lang.String">
  {CALL adddefaultStatesToCountry()}
  </procedure>
  
</sqlMap>