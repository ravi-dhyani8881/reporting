package com.mobicart.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AuthorityExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	public AuthorityExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	protected AuthorityExample(AuthorityExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table authorities
	 * @ibatorgenerated  Tue Sep 28 16:26:53 IST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andUsernameIsNull() {
			addCriterion("username is null");
			return this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("username is not null");
			return this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("username =", value, "username");
			return this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("username <>", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("username >", value, "username");
			return this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("username >=", value, "username");
			return this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("username <", value, "username");
			return this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("username <=", value, "username");
			return this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("username like", value, "username");
			return this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("username not like", value, "username");
			return this;
		}

		public Criteria andUsernameIn(List values) {
			addCriterion("username in", values, "username");
			return this;
		}

		public Criteria andUsernameNotIn(List values) {
			addCriterion("username not in", values, "username");
			return this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("username between", value1, value2, "username");
			return this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("username not between", value1, value2, "username");
			return this;
		}

		public Criteria andAuthorityIsNull() {
			addCriterion("authority is null");
			return this;
		}

		public Criteria andAuthorityIsNotNull() {
			addCriterion("authority is not null");
			return this;
		}

		public Criteria andAuthorityEqualTo(String value) {
			addCriterion("authority =", value, "authority");
			return this;
		}

		public Criteria andAuthorityNotEqualTo(String value) {
			addCriterion("authority <>", value, "authority");
			return this;
		}

		public Criteria andAuthorityGreaterThan(String value) {
			addCriterion("authority >", value, "authority");
			return this;
		}

		public Criteria andAuthorityGreaterThanOrEqualTo(String value) {
			addCriterion("authority >=", value, "authority");
			return this;
		}

		public Criteria andAuthorityLessThan(String value) {
			addCriterion("authority <", value, "authority");
			return this;
		}

		public Criteria andAuthorityLessThanOrEqualTo(String value) {
			addCriterion("authority <=", value, "authority");
			return this;
		}

		public Criteria andAuthorityLike(String value) {
			addCriterion("authority like", value, "authority");
			return this;
		}

		public Criteria andAuthorityNotLike(String value) {
			addCriterion("authority not like", value, "authority");
			return this;
		}

		public Criteria andAuthorityIn(List values) {
			addCriterion("authority in", values, "authority");
			return this;
		}

		public Criteria andAuthorityNotIn(List values) {
			addCriterion("authority not in", values, "authority");
			return this;
		}

		public Criteria andAuthorityBetween(String value1, String value2) {
			addCriterion("authority between", value1, value2, "authority");
			return this;
		}

		public Criteria andAuthorityNotBetween(String value1, String value2) {
			addCriterion("authority not between", value1, value2, "authority");
			return this;
		}

		public Criteria andBUsersIsNull() {
			addCriterion("b_users is null");
			return this;
		}

		public Criteria andBUsersIsNotNull() {
			addCriterion("b_users is not null");
			return this;
		}

		public Criteria andBUsersEqualTo(Boolean value) {
			addCriterion("b_users =", value, "bUsers");
			return this;
		}

		public Criteria andBUsersNotEqualTo(Boolean value) {
			addCriterion("b_users <>", value, "bUsers");
			return this;
		}

		public Criteria andBUsersGreaterThan(Boolean value) {
			addCriterion("b_users >", value, "bUsers");
			return this;
		}

		public Criteria andBUsersGreaterThanOrEqualTo(Boolean value) {
			addCriterion("b_users >=", value, "bUsers");
			return this;
		}

		public Criteria andBUsersLessThan(Boolean value) {
			addCriterion("b_users <", value, "bUsers");
			return this;
		}

		public Criteria andBUsersLessThanOrEqualTo(Boolean value) {
			addCriterion("b_users <=", value, "bUsers");
			return this;
		}

		public Criteria andBUsersIn(List values) {
			addCriterion("b_users in", values, "bUsers");
			return this;
		}

		public Criteria andBUsersNotIn(List values) {
			addCriterion("b_users not in", values, "bUsers");
			return this;
		}

		public Criteria andBUsersBetween(Boolean value1, Boolean value2) {
			addCriterion("b_users between", value1, value2, "bUsers");
			return this;
		}

		public Criteria andBUsersNotBetween(Boolean value1, Boolean value2) {
			addCriterion("b_users not between", value1, value2, "bUsers");
			return this;
		}

		public Criteria andBOrdersIsNull() {
			addCriterion("b_orders is null");
			return this;
		}

		public Criteria andBOrdersIsNotNull() {
			addCriterion("b_orders is not null");
			return this;
		}

		public Criteria andBOrdersEqualTo(Boolean value) {
			addCriterion("b_orders =", value, "bOrders");
			return this;
		}

		public Criteria andBOrdersNotEqualTo(Boolean value) {
			addCriterion("b_orders <>", value, "bOrders");
			return this;
		}

		public Criteria andBOrdersGreaterThan(Boolean value) {
			addCriterion("b_orders >", value, "bOrders");
			return this;
		}

		public Criteria andBOrdersGreaterThanOrEqualTo(Boolean value) {
			addCriterion("b_orders >=", value, "bOrders");
			return this;
		}

		public Criteria andBOrdersLessThan(Boolean value) {
			addCriterion("b_orders <", value, "bOrders");
			return this;
		}

		public Criteria andBOrdersLessThanOrEqualTo(Boolean value) {
			addCriterion("b_orders <=", value, "bOrders");
			return this;
		}

		public Criteria andBOrdersIn(List values) {
			addCriterion("b_orders in", values, "bOrders");
			return this;
		}

		public Criteria andBOrdersNotIn(List values) {
			addCriterion("b_orders not in", values, "bOrders");
			return this;
		}

		public Criteria andBOrdersBetween(Boolean value1, Boolean value2) {
			addCriterion("b_orders between", value1, value2, "bOrders");
			return this;
		}

		public Criteria andBOrdersNotBetween(Boolean value1, Boolean value2) {
			addCriterion("b_orders not between", value1, value2, "bOrders");
			return this;
		}

		public Criteria andBPaymentIsNull() {
			addCriterion("b_payment is null");
			return this;
		}

		public Criteria andBPaymentIsNotNull() {
			addCriterion("b_payment is not null");
			return this;
		}

		public Criteria andBPaymentEqualTo(Boolean value) {
			addCriterion("b_payment =", value, "bPayment");
			return this;
		}

		public Criteria andBPaymentNotEqualTo(Boolean value) {
			addCriterion("b_payment <>", value, "bPayment");
			return this;
		}

		public Criteria andBPaymentGreaterThan(Boolean value) {
			addCriterion("b_payment >", value, "bPayment");
			return this;
		}

		public Criteria andBPaymentGreaterThanOrEqualTo(Boolean value) {
			addCriterion("b_payment >=", value, "bPayment");
			return this;
		}

		public Criteria andBPaymentLessThan(Boolean value) {
			addCriterion("b_payment <", value, "bPayment");
			return this;
		}

		public Criteria andBPaymentLessThanOrEqualTo(Boolean value) {
			addCriterion("b_payment <=", value, "bPayment");
			return this;
		}

		public Criteria andBPaymentIn(List values) {
			addCriterion("b_payment in", values, "bPayment");
			return this;
		}

		public Criteria andBPaymentNotIn(List values) {
			addCriterion("b_payment not in", values, "bPayment");
			return this;
		}

		public Criteria andBPaymentBetween(Boolean value1, Boolean value2) {
			addCriterion("b_payment between", value1, value2, "bPayment");
			return this;
		}

		public Criteria andBPaymentNotBetween(Boolean value1, Boolean value2) {
			addCriterion("b_payment not between", value1, value2, "bPayment");
			return this;
		}

		public Criteria andBContentIsNull() {
			addCriterion("b_content is null");
			return this;
		}

		public Criteria andBContentIsNotNull() {
			addCriterion("b_content is not null");
			return this;
		}

		public Criteria andBContentEqualTo(Boolean value) {
			addCriterion("b_content =", value, "bContent");
			return this;
		}

		public Criteria andBContentNotEqualTo(Boolean value) {
			addCriterion("b_content <>", value, "bContent");
			return this;
		}

		public Criteria andBContentGreaterThan(Boolean value) {
			addCriterion("b_content >", value, "bContent");
			return this;
		}

		public Criteria andBContentGreaterThanOrEqualTo(Boolean value) {
			addCriterion("b_content >=", value, "bContent");
			return this;
		}

		public Criteria andBContentLessThan(Boolean value) {
			addCriterion("b_content <", value, "bContent");
			return this;
		}

		public Criteria andBContentLessThanOrEqualTo(Boolean value) {
			addCriterion("b_content <=", value, "bContent");
			return this;
		}

		public Criteria andBContentIn(List values) {
			addCriterion("b_content in", values, "bContent");
			return this;
		}

		public Criteria andBContentNotIn(List values) {
			addCriterion("b_content not in", values, "bContent");
			return this;
		}

		public Criteria andBContentBetween(Boolean value1, Boolean value2) {
			addCriterion("b_content between", value1, value2, "bContent");
			return this;
		}

		public Criteria andBContentNotBetween(Boolean value1, Boolean value2) {
			addCriterion("b_content not between", value1, value2, "bContent");
			return this;
		}
	}
}