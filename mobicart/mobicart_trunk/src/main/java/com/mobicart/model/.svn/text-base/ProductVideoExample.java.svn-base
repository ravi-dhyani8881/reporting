package com.mobicart.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductVideoExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	public ProductVideoExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	protected ProductVideoExample(ProductVideoExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table product_videos
	 * @ibatorgenerated  Mon Aug 16 19:46:37 IST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andProductIdIsNull() {
			addCriterion("product_id is null");
			return this;
		}

		public Criteria andProductIdIsNotNull() {
			addCriterion("product_id is not null");
			return this;
		}

		public Criteria andProductIdEqualTo(Long value) {
			addCriterion("product_id =", value, "productId");
			return this;
		}

		public Criteria andProductIdNotEqualTo(Long value) {
			addCriterion("product_id <>", value, "productId");
			return this;
		}

		public Criteria andProductIdGreaterThan(Long value) {
			addCriterion("product_id >", value, "productId");
			return this;
		}

		public Criteria andProductIdGreaterThanOrEqualTo(Long value) {
			addCriterion("product_id >=", value, "productId");
			return this;
		}

		public Criteria andProductIdLessThan(Long value) {
			addCriterion("product_id <", value, "productId");
			return this;
		}

		public Criteria andProductIdLessThanOrEqualTo(Long value) {
			addCriterion("product_id <=", value, "productId");
			return this;
		}

		public Criteria andProductIdIn(List values) {
			addCriterion("product_id in", values, "productId");
			return this;
		}

		public Criteria andProductIdNotIn(List values) {
			addCriterion("product_id not in", values, "productId");
			return this;
		}

		public Criteria andProductIdBetween(Long value1, Long value2) {
			addCriterion("product_id between", value1, value2, "productId");
			return this;
		}

		public Criteria andProductIdNotBetween(Long value1, Long value2) {
			addCriterion("product_id not between", value1, value2, "productId");
			return this;
		}

		public Criteria andVideoIdIsNull() {
			addCriterion("video_id is null");
			return this;
		}

		public Criteria andVideoIdIsNotNull() {
			addCriterion("video_id is not null");
			return this;
		}

		public Criteria andVideoIdEqualTo(Long value) {
			addCriterion("video_id =", value, "videoId");
			return this;
		}

		public Criteria andVideoIdNotEqualTo(Long value) {
			addCriterion("video_id <>", value, "videoId");
			return this;
		}

		public Criteria andVideoIdGreaterThan(Long value) {
			addCriterion("video_id >", value, "videoId");
			return this;
		}

		public Criteria andVideoIdGreaterThanOrEqualTo(Long value) {
			addCriterion("video_id >=", value, "videoId");
			return this;
		}

		public Criteria andVideoIdLessThan(Long value) {
			addCriterion("video_id <", value, "videoId");
			return this;
		}

		public Criteria andVideoIdLessThanOrEqualTo(Long value) {
			addCriterion("video_id <=", value, "videoId");
			return this;
		}

		public Criteria andVideoIdIn(List values) {
			addCriterion("video_id in", values, "videoId");
			return this;
		}

		public Criteria andVideoIdNotIn(List values) {
			addCriterion("video_id not in", values, "videoId");
			return this;
		}

		public Criteria andVideoIdBetween(Long value1, Long value2) {
			addCriterion("video_id between", value1, value2, "videoId");
			return this;
		}

		public Criteria andVideoIdNotBetween(Long value1, Long value2) {
			addCriterion("video_id not between", value1, value2, "videoId");
			return this;
		}
	}
}