package com.mobicart.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BillingExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	public BillingExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	protected BillingExample(BillingExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table billing
	 * @ibatorgenerated  Wed Sep 15 16:59:28 IST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andAppIdIsNull() {
			addCriterion("app_id is null");
			return this;
		}

		public Criteria andAppIdIsNotNull() {
			addCriterion("app_id is not null");
			return this;
		}

		public Criteria andAppIdEqualTo(Long value) {
			addCriterion("app_id =", value, "appId");
			return this;
		}

		public Criteria andAppIdNotEqualTo(Long value) {
			addCriterion("app_id <>", value, "appId");
			return this;
		}

		public Criteria andAppIdGreaterThan(Long value) {
			addCriterion("app_id >", value, "appId");
			return this;
		}

		public Criteria andAppIdGreaterThanOrEqualTo(Long value) {
			addCriterion("app_id >=", value, "appId");
			return this;
		}

		public Criteria andAppIdLessThan(Long value) {
			addCriterion("app_id <", value, "appId");
			return this;
		}

		public Criteria andAppIdLessThanOrEqualTo(Long value) {
			addCriterion("app_id <=", value, "appId");
			return this;
		}

		public Criteria andAppIdIn(List values) {
			addCriterion("app_id in", values, "appId");
			return this;
		}

		public Criteria andAppIdNotIn(List values) {
			addCriterion("app_id not in", values, "appId");
			return this;
		}

		public Criteria andAppIdBetween(Long value1, Long value2) {
			addCriterion("app_id between", value1, value2, "appId");
			return this;
		}

		public Criteria andAppIdNotBetween(Long value1, Long value2) {
			addCriterion("app_id not between", value1, value2, "appId");
			return this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return this;
		}

		public Criteria andUserIdEqualTo(Long value) {
			addCriterion("user_id =", value, "userId");
			return this;
		}

		public Criteria andUserIdNotEqualTo(Long value) {
			addCriterion("user_id <>", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThan(Long value) {
			addCriterion("user_id >", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("user_id >=", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThan(Long value) {
			addCriterion("user_id <", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Long value) {
			addCriterion("user_id <=", value, "userId");
			return this;
		}

		public Criteria andUserIdIn(List values) {
			addCriterion("user_id in", values, "userId");
			return this;
		}

		public Criteria andUserIdNotIn(List values) {
			addCriterion("user_id not in", values, "userId");
			return this;
		}

		public Criteria andUserIdBetween(Long value1, Long value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserIdNotBetween(Long value1, Long value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return this;
		}

		public Criteria andDBillingDateIsNull() {
			addCriterion("d_billing_date is null");
			return this;
		}

		public Criteria andDBillingDateIsNotNull() {
			addCriterion("d_billing_date is not null");
			return this;
		}

		public Criteria andDBillingDateEqualTo(Date value) {
			addCriterion("d_billing_date =", value, "dBillingDate");
			return this;
		}

		public Criteria andDBillingDateNotEqualTo(Date value) {
			addCriterion("d_billing_date <>", value, "dBillingDate");
			return this;
		}

		public Criteria andDBillingDateGreaterThan(Date value) {
			addCriterion("d_billing_date >", value, "dBillingDate");
			return this;
		}

		public Criteria andDBillingDateGreaterThanOrEqualTo(Date value) {
			addCriterion("d_billing_date >=", value, "dBillingDate");
			return this;
		}

		public Criteria andDBillingDateLessThan(Date value) {
			addCriterion("d_billing_date <", value, "dBillingDate");
			return this;
		}

		public Criteria andDBillingDateLessThanOrEqualTo(Date value) {
			addCriterion("d_billing_date <=", value, "dBillingDate");
			return this;
		}

		public Criteria andDBillingDateIn(List values) {
			addCriterion("d_billing_date in", values, "dBillingDate");
			return this;
		}

		public Criteria andDBillingDateNotIn(List values) {
			addCriterion("d_billing_date not in", values, "dBillingDate");
			return this;
		}

		public Criteria andDBillingDateBetween(Date value1, Date value2) {
			addCriterion("d_billing_date between", value1, value2,
					"dBillingDate");
			return this;
		}

		public Criteria andDBillingDateNotBetween(Date value1, Date value2) {
			addCriterion("d_billing_date not between", value1, value2,
					"dBillingDate");
			return this;
		}

		public Criteria andSTypeIsNull() {
			addCriterion("s_type is null");
			return this;
		}

		public Criteria andSTypeIsNotNull() {
			addCriterion("s_type is not null");
			return this;
		}

		public Criteria andSTypeEqualTo(String value) {
			addCriterion("s_type =", value, "sType");
			return this;
		}

		public Criteria andSTypeNotEqualTo(String value) {
			addCriterion("s_type <>", value, "sType");
			return this;
		}

		public Criteria andSTypeGreaterThan(String value) {
			addCriterion("s_type >", value, "sType");
			return this;
		}

		public Criteria andSTypeGreaterThanOrEqualTo(String value) {
			addCriterion("s_type >=", value, "sType");
			return this;
		}

		public Criteria andSTypeLessThan(String value) {
			addCriterion("s_type <", value, "sType");
			return this;
		}

		public Criteria andSTypeLessThanOrEqualTo(String value) {
			addCriterion("s_type <=", value, "sType");
			return this;
		}

		public Criteria andSTypeLike(String value) {
			addCriterion("s_type like", value, "sType");
			return this;
		}

		public Criteria andSTypeNotLike(String value) {
			addCriterion("s_type not like", value, "sType");
			return this;
		}

		public Criteria andSTypeIn(List values) {
			addCriterion("s_type in", values, "sType");
			return this;
		}

		public Criteria andSTypeNotIn(List values) {
			addCriterion("s_type not in", values, "sType");
			return this;
		}

		public Criteria andSTypeBetween(String value1, String value2) {
			addCriterion("s_type between", value1, value2, "sType");
			return this;
		}

		public Criteria andSTypeNotBetween(String value1, String value2) {
			addCriterion("s_type not between", value1, value2, "sType");
			return this;
		}

		public Criteria andFAmountIsNull() {
			addCriterion("f_amount is null");
			return this;
		}

		public Criteria andFAmountIsNotNull() {
			addCriterion("f_amount is not null");
			return this;
		}

		public Criteria andFAmountEqualTo(BigDecimal value) {
			addCriterion("f_amount =", value, "fAmount");
			return this;
		}

		public Criteria andFAmountNotEqualTo(BigDecimal value) {
			addCriterion("f_amount <>", value, "fAmount");
			return this;
		}

		public Criteria andFAmountGreaterThan(BigDecimal value) {
			addCriterion("f_amount >", value, "fAmount");
			return this;
		}

		public Criteria andFAmountGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("f_amount >=", value, "fAmount");
			return this;
		}

		public Criteria andFAmountLessThan(BigDecimal value) {
			addCriterion("f_amount <", value, "fAmount");
			return this;
		}

		public Criteria andFAmountLessThanOrEqualTo(BigDecimal value) {
			addCriterion("f_amount <=", value, "fAmount");
			return this;
		}

		public Criteria andFAmountIn(List values) {
			addCriterion("f_amount in", values, "fAmount");
			return this;
		}

		public Criteria andFAmountNotIn(List values) {
			addCriterion("f_amount not in", values, "fAmount");
			return this;
		}

		public Criteria andFAmountBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("f_amount between", value1, value2, "fAmount");
			return this;
		}

		public Criteria andFAmountNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("f_amount not between", value1, value2, "fAmount");
			return this;
		}
	}
}