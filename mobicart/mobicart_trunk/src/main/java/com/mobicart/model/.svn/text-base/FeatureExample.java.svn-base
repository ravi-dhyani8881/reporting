package com.mobicart.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FeatureExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public FeatureExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected FeatureExample(FeatureExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table features
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andSNameIsNull() {
			addCriterion("s_name is null");
			return this;
		}

		public Criteria andSNameIsNotNull() {
			addCriterion("s_name is not null");
			return this;
		}

		public Criteria andSNameEqualTo(String value) {
			addCriterion("s_name =", value, "sName");
			return this;
		}

		public Criteria andSNameNotEqualTo(String value) {
			addCriterion("s_name <>", value, "sName");
			return this;
		}

		public Criteria andSNameGreaterThan(String value) {
			addCriterion("s_name >", value, "sName");
			return this;
		}

		public Criteria andSNameGreaterThanOrEqualTo(String value) {
			addCriterion("s_name >=", value, "sName");
			return this;
		}

		public Criteria andSNameLessThan(String value) {
			addCriterion("s_name <", value, "sName");
			return this;
		}

		public Criteria andSNameLessThanOrEqualTo(String value) {
			addCriterion("s_name <=", value, "sName");
			return this;
		}

		public Criteria andSNameLike(String value) {
			addCriterion("s_name like", value, "sName");
			return this;
		}

		public Criteria andSNameNotLike(String value) {
			addCriterion("s_name not like", value, "sName");
			return this;
		}

		public Criteria andSNameIn(List values) {
			addCriterion("s_name in", values, "sName");
			return this;
		}

		public Criteria andSNameNotIn(List values) {
			addCriterion("s_name not in", values, "sName");
			return this;
		}

		public Criteria andSNameBetween(String value1, String value2) {
			addCriterion("s_name between", value1, value2, "sName");
			return this;
		}

		public Criteria andSNameNotBetween(String value1, String value2) {
			addCriterion("s_name not between", value1, value2, "sName");
			return this;
		}

		public Criteria andSDescriptionIsNull() {
			addCriterion("s_description is null");
			return this;
		}

		public Criteria andSDescriptionIsNotNull() {
			addCriterion("s_description is not null");
			return this;
		}

		public Criteria andSDescriptionEqualTo(String value) {
			addCriterion("s_description =", value, "sDescription");
			return this;
		}

		public Criteria andSDescriptionNotEqualTo(String value) {
			addCriterion("s_description <>", value, "sDescription");
			return this;
		}

		public Criteria andSDescriptionGreaterThan(String value) {
			addCriterion("s_description >", value, "sDescription");
			return this;
		}

		public Criteria andSDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("s_description >=", value, "sDescription");
			return this;
		}

		public Criteria andSDescriptionLessThan(String value) {
			addCriterion("s_description <", value, "sDescription");
			return this;
		}

		public Criteria andSDescriptionLessThanOrEqualTo(String value) {
			addCriterion("s_description <=", value, "sDescription");
			return this;
		}

		public Criteria andSDescriptionLike(String value) {
			addCriterion("s_description like", value, "sDescription");
			return this;
		}

		public Criteria andSDescriptionNotLike(String value) {
			addCriterion("s_description not like", value, "sDescription");
			return this;
		}

		public Criteria andSDescriptionIn(List values) {
			addCriterion("s_description in", values, "sDescription");
			return this;
		}

		public Criteria andSDescriptionNotIn(List values) {
			addCriterion("s_description not in", values, "sDescription");
			return this;
		}

		public Criteria andSDescriptionBetween(String value1, String value2) {
			addCriterion("s_description between", value1, value2,
					"sDescription");
			return this;
		}

		public Criteria andSDescriptionNotBetween(String value1, String value2) {
			addCriterion("s_description not between", value1, value2,
					"sDescription");
			return this;
		}

		public Criteria andSIphoneHandleIsNull() {
			addCriterion("s_iphone_handle is null");
			return this;
		}

		public Criteria andSIphoneHandleIsNotNull() {
			addCriterion("s_iphone_handle is not null");
			return this;
		}

		public Criteria andSIphoneHandleEqualTo(String value) {
			addCriterion("s_iphone_handle =", value, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleNotEqualTo(String value) {
			addCriterion("s_iphone_handle <>", value, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleGreaterThan(String value) {
			addCriterion("s_iphone_handle >", value, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleGreaterThanOrEqualTo(String value) {
			addCriterion("s_iphone_handle >=", value, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleLessThan(String value) {
			addCriterion("s_iphone_handle <", value, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleLessThanOrEqualTo(String value) {
			addCriterion("s_iphone_handle <=", value, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleLike(String value) {
			addCriterion("s_iphone_handle like", value, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleNotLike(String value) {
			addCriterion("s_iphone_handle not like", value, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleIn(List values) {
			addCriterion("s_iphone_handle in", values, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleNotIn(List values) {
			addCriterion("s_iphone_handle not in", values, "sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleBetween(String value1, String value2) {
			addCriterion("s_iphone_handle between", value1, value2,
					"sIphoneHandle");
			return this;
		}

		public Criteria andSIphoneHandleNotBetween(String value1, String value2) {
			addCriterion("s_iphone_handle not between", value1, value2,
					"sIphoneHandle");
			return this;
		}

		public Criteria andFFeeIsNull() {
			addCriterion("f_fee is null");
			return this;
		}

		public Criteria andFFeeIsNotNull() {
			addCriterion("f_fee is not null");
			return this;
		}

		public Criteria andFFeeEqualTo(Float value) {
			addCriterion("f_fee =", value, "fFee");
			return this;
		}

		public Criteria andFFeeNotEqualTo(Float value) {
			addCriterion("f_fee <>", value, "fFee");
			return this;
		}

		public Criteria andFFeeGreaterThan(Float value) {
			addCriterion("f_fee >", value, "fFee");
			return this;
		}

		public Criteria andFFeeGreaterThanOrEqualTo(Float value) {
			addCriterion("f_fee >=", value, "fFee");
			return this;
		}

		public Criteria andFFeeLessThan(Float value) {
			addCriterion("f_fee <", value, "fFee");
			return this;
		}

		public Criteria andFFeeLessThanOrEqualTo(Float value) {
			addCriterion("f_fee <=", value, "fFee");
			return this;
		}

		public Criteria andFFeeIn(List values) {
			addCriterion("f_fee in", values, "fFee");
			return this;
		}

		public Criteria andFFeeNotIn(List values) {
			addCriterion("f_fee not in", values, "fFee");
			return this;
		}

		public Criteria andFFeeBetween(Float value1, Float value2) {
			addCriterion("f_fee between", value1, value2, "fFee");
			return this;
		}

		public Criteria andFFeeNotBetween(Float value1, Float value2) {
			addCriterion("f_fee not between", value1, value2, "fFee");
			return this;
		}

		public Criteria andBEnabledIsNull() {
			addCriterion("b_enabled is null");
			return this;
		}

		public Criteria andBEnabledIsNotNull() {
			addCriterion("b_enabled is not null");
			return this;
		}

		public Criteria andBEnabledEqualTo(Boolean value) {
			addCriterion("b_enabled =", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledNotEqualTo(Boolean value) {
			addCriterion("b_enabled <>", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledGreaterThan(Boolean value) {
			addCriterion("b_enabled >", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledGreaterThanOrEqualTo(Boolean value) {
			addCriterion("b_enabled >=", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledLessThan(Boolean value) {
			addCriterion("b_enabled <", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledLessThanOrEqualTo(Boolean value) {
			addCriterion("b_enabled <=", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledIn(List values) {
			addCriterion("b_enabled in", values, "bEnabled");
			return this;
		}

		public Criteria andBEnabledNotIn(List values) {
			addCriterion("b_enabled not in", values, "bEnabled");
			return this;
		}

		public Criteria andBEnabledBetween(Boolean value1, Boolean value2) {
			addCriterion("b_enabled between", value1, value2, "bEnabled");
			return this;
		}

		public Criteria andBEnabledNotBetween(Boolean value1, Boolean value2) {
			addCriterion("b_enabled not between", value1, value2, "bEnabled");
			return this;
		}
	}
}