package com.mobicart.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AddressExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	@SuppressWarnings("rawtypes")
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	@SuppressWarnings("rawtypes")
	public AddressExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected AddressExample(AddressExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table users_address
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return this;
		}

		public Criteria andUserIdEqualTo(Long value) {
			addCriterion("user_id =", value, "userId");
			return this;
		}

		public Criteria andUserIdNotEqualTo(Long value) {
			addCriterion("user_id <>", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThan(Long value) {
			addCriterion("user_id >", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("user_id >=", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThan(Long value) {
			addCriterion("user_id <", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Long value) {
			addCriterion("user_id <=", value, "userId");
			return this;
		}

		public Criteria andUserIdIn(List values) {
			addCriterion("user_id in", values, "userId");
			return this;
		}

		public Criteria andUserIdNotIn(List values) {
			addCriterion("user_id not in", values, "userId");
			return this;
		}

		public Criteria andUserIdBetween(Long value1, Long value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserIdNotBetween(Long value1, Long value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return this;
		}

		public Criteria andSAddressTypeIsNull() {
			addCriterion("s_address_type is null");
			return this;
		}

		public Criteria andSAddressTypeIsNotNull() {
			addCriterion("s_address_type is not null");
			return this;
		}

		public Criteria andSAddressTypeEqualTo(String value) {
			addCriterion("s_address_type =", value, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeNotEqualTo(String value) {
			addCriterion("s_address_type <>", value, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeGreaterThan(String value) {
			addCriterion("s_address_type >", value, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeGreaterThanOrEqualTo(String value) {
			addCriterion("s_address_type >=", value, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeLessThan(String value) {
			addCriterion("s_address_type <", value, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeLessThanOrEqualTo(String value) {
			addCriterion("s_address_type <=", value, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeLike(String value) {
			addCriterion("s_address_type like", value, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeNotLike(String value) {
			addCriterion("s_address_type not like", value, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeIn(List values) {
			addCriterion("s_address_type in", values, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeNotIn(List values) {
			addCriterion("s_address_type not in", values, "sAddressType");
			return this;
		}

		public Criteria andSAddressTypeBetween(String value1, String value2) {
			addCriterion("s_address_type between", value1, value2,
					"sAddressType");
			return this;
		}

		public Criteria andSAddressTypeNotBetween(String value1, String value2) {
			addCriterion("s_address_type not between", value1, value2,
					"sAddressType");
			return this;
		}

		public Criteria andSAddressIsNull() {
			addCriterion("s_address is null");
			return this;
		}

		public Criteria andSAddressIsNotNull() {
			addCriterion("s_address is not null");
			return this;
		}

		public Criteria andSAddressEqualTo(String value) {
			addCriterion("s_address =", value, "sAddress");
			return this;
		}

		public Criteria andSAddressNotEqualTo(String value) {
			addCriterion("s_address <>", value, "sAddress");
			return this;
		}

		public Criteria andSAddressGreaterThan(String value) {
			addCriterion("s_address >", value, "sAddress");
			return this;
		}

		public Criteria andSAddressGreaterThanOrEqualTo(String value) {
			addCriterion("s_address >=", value, "sAddress");
			return this;
		}

		public Criteria andSAddressLessThan(String value) {
			addCriterion("s_address <", value, "sAddress");
			return this;
		}

		public Criteria andSAddressLessThanOrEqualTo(String value) {
			addCriterion("s_address <=", value, "sAddress");
			return this;
		}

		public Criteria andSAddressLike(String value) {
			addCriterion("s_address like", value, "sAddress");
			return this;
		}

		public Criteria andSAddressNotLike(String value) {
			addCriterion("s_address not like", value, "sAddress");
			return this;
		}

		public Criteria andSAddressIn(List values) {
			addCriterion("s_address in", values, "sAddress");
			return this;
		}

		public Criteria andSAddressNotIn(List values) {
			addCriterion("s_address not in", values, "sAddress");
			return this;
		}

		public Criteria andSAddressBetween(String value1, String value2) {
			addCriterion("s_address between", value1, value2, "sAddress");
			return this;
		}

		public Criteria andSAddressNotBetween(String value1, String value2) {
			addCriterion("s_address not between", value1, value2, "sAddress");
			return this;
		}

		public Criteria andSCityIsNull() {
			addCriterion("s_city is null");
			return this;
		}

		public Criteria andSCityIsNotNull() {
			addCriterion("s_city is not null");
			return this;
		}

		public Criteria andSCityEqualTo(String value) {
			addCriterion("s_city =", value, "sCity");
			return this;
		}

		public Criteria andSCityNotEqualTo(String value) {
			addCriterion("s_city <>", value, "sCity");
			return this;
		}

		public Criteria andSCityGreaterThan(String value) {
			addCriterion("s_city >", value, "sCity");
			return this;
		}

		public Criteria andSCityGreaterThanOrEqualTo(String value) {
			addCriterion("s_city >=", value, "sCity");
			return this;
		}

		public Criteria andSCityLessThan(String value) {
			addCriterion("s_city <", value, "sCity");
			return this;
		}

		public Criteria andSCityLessThanOrEqualTo(String value) {
			addCriterion("s_city <=", value, "sCity");
			return this;
		}

		public Criteria andSCityLike(String value) {
			addCriterion("s_city like", value, "sCity");
			return this;
		}

		public Criteria andSCityNotLike(String value) {
			addCriterion("s_city not like", value, "sCity");
			return this;
		}

		public Criteria andSCityIn(List values) {
			addCriterion("s_city in", values, "sCity");
			return this;
		}

		public Criteria andSCityNotIn(List values) {
			addCriterion("s_city not in", values, "sCity");
			return this;
		}

		public Criteria andSCityBetween(String value1, String value2) {
			addCriterion("s_city between", value1, value2, "sCity");
			return this;
		}

		public Criteria andSCityNotBetween(String value1, String value2) {
			addCriterion("s_city not between", value1, value2, "sCity");
			return this;
		}

		public Criteria andSStateIsNull() {
			addCriterion("s_state is null");
			return this;
		}

		public Criteria andSStateIsNotNull() {
			addCriterion("s_state is not null");
			return this;
		}

		public Criteria andSStateEqualTo(String value) {
			addCriterion("s_state =", value, "sState");
			return this;
		}

		public Criteria andSStateNotEqualTo(String value) {
			addCriterion("s_state <>", value, "sState");
			return this;
		}

		public Criteria andSStateGreaterThan(String value) {
			addCriterion("s_state >", value, "sState");
			return this;
		}

		public Criteria andSStateGreaterThanOrEqualTo(String value) {
			addCriterion("s_state >=", value, "sState");
			return this;
		}

		public Criteria andSStateLessThan(String value) {
			addCriterion("s_state <", value, "sState");
			return this;
		}

		public Criteria andSStateLessThanOrEqualTo(String value) {
			addCriterion("s_state <=", value, "sState");
			return this;
		}

		public Criteria andSStateLike(String value) {
			addCriterion("s_state like", value, "sState");
			return this;
		}

		public Criteria andSStateNotLike(String value) {
			addCriterion("s_state not like", value, "sState");
			return this;
		}

		public Criteria andSStateIn(List values) {
			addCriterion("s_state in", values, "sState");
			return this;
		}

		public Criteria andSStateNotIn(List values) {
			addCriterion("s_state not in", values, "sState");
			return this;
		}

		public Criteria andSStateBetween(String value1, String value2) {
			addCriterion("s_state between", value1, value2, "sState");
			return this;
		}

		public Criteria andSStateNotBetween(String value1, String value2) {
			addCriterion("s_state not between", value1, value2, "sState");
			return this;
		}

		public Criteria andSZipIsNull() {
			addCriterion("s_zip is null");
			return this;
		}

		public Criteria andSZipIsNotNull() {
			addCriterion("s_zip is not null");
			return this;
		}

		public Criteria andSZipEqualTo(String value) {
			addCriterion("s_zip =", value, "sZip");
			return this;
		}

		public Criteria andSZipNotEqualTo(String value) {
			addCriterion("s_zip <>", value, "sZip");
			return this;
		}

		public Criteria andSZipGreaterThan(String value) {
			addCriterion("s_zip >", value, "sZip");
			return this;
		}

		public Criteria andSZipGreaterThanOrEqualTo(String value) {
			addCriterion("s_zip >=", value, "sZip");
			return this;
		}

		public Criteria andSZipLessThan(String value) {
			addCriterion("s_zip <", value, "sZip");
			return this;
		}

		public Criteria andSZipLessThanOrEqualTo(String value) {
			addCriterion("s_zip <=", value, "sZip");
			return this;
		}

		public Criteria andSZipLike(String value) {
			addCriterion("s_zip like", value, "sZip");
			return this;
		}

		public Criteria andSZipNotLike(String value) {
			addCriterion("s_zip not like", value, "sZip");
			return this;
		}

		public Criteria andSZipIn(List values) {
			addCriterion("s_zip in", values, "sZip");
			return this;
		}

		public Criteria andSZipNotIn(List values) {
			addCriterion("s_zip not in", values, "sZip");
			return this;
		}

		public Criteria andSZipBetween(String value1, String value2) {
			addCriterion("s_zip between", value1, value2, "sZip");
			return this;
		}

		public Criteria andSZipNotBetween(String value1, String value2) {
			addCriterion("s_zip not between", value1, value2, "sZip");
			return this;
		}

		public Criteria andSCountryIsNull() {
			addCriterion("s_country is null");
			return this;
		}

		public Criteria andSCountryIsNotNull() {
			addCriterion("s_country is not null");
			return this;
		}

		public Criteria andSCountryEqualTo(String value) {
			addCriterion("s_country =", value, "sCountry");
			return this;
		}

		public Criteria andSCountryNotEqualTo(String value) {
			addCriterion("s_country <>", value, "sCountry");
			return this;
		}

		public Criteria andSCountryGreaterThan(String value) {
			addCriterion("s_country >", value, "sCountry");
			return this;
		}

		public Criteria andSCountryGreaterThanOrEqualTo(String value) {
			addCriterion("s_country >=", value, "sCountry");
			return this;
		}

		public Criteria andSCountryLessThan(String value) {
			addCriterion("s_country <", value, "sCountry");
			return this;
		}

		public Criteria andSCountryLessThanOrEqualTo(String value) {
			addCriterion("s_country <=", value, "sCountry");
			return this;
		}

		public Criteria andSCountryLike(String value) {
			addCriterion("s_country like", value, "sCountry");
			return this;
		}

		public Criteria andSCountryNotLike(String value) {
			addCriterion("s_country not like", value, "sCountry");
			return this;
		}

		public Criteria andSCountryIn(List values) {
			addCriterion("s_country in", values, "sCountry");
			return this;
		}

		public Criteria andSCountryNotIn(List values) {
			addCriterion("s_country not in", values, "sCountry");
			return this;
		}

		public Criteria andSCountryBetween(String value1, String value2) {
			addCriterion("s_country between", value1, value2, "sCountry");
			return this;
		}

		public Criteria andSCountryNotBetween(String value1, String value2) {
			addCriterion("s_country not between", value1, value2, "sCountry");
			return this;
		}

		public Criteria andBEnabledIsNull() {
			addCriterion("b_enabled is null");
			return this;
		}

		public Criteria andBEnabledIsNotNull() {
			addCriterion("b_enabled is not null");
			return this;
		}

		public Criteria andBEnabledEqualTo(Boolean value) {
			addCriterion("b_enabled =", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledNotEqualTo(Boolean value) {
			addCriterion("b_enabled <>", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledGreaterThan(Boolean value) {
			addCriterion("b_enabled >", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledGreaterThanOrEqualTo(Boolean value) {
			addCriterion("b_enabled >=", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledLessThan(Boolean value) {
			addCriterion("b_enabled <", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledLessThanOrEqualTo(Boolean value) {
			addCriterion("b_enabled <=", value, "bEnabled");
			return this;
		}

		public Criteria andBEnabledIn(List values) {
			addCriterion("b_enabled in", values, "bEnabled");
			return this;
		}

		public Criteria andBEnabledNotIn(List values) {
			addCriterion("b_enabled not in", values, "bEnabled");
			return this;
		}

		public Criteria andBEnabledBetween(Boolean value1, Boolean value2) {
			addCriterion("b_enabled between", value1, value2, "bEnabled");
			return this;
		}

		public Criteria andBEnabledNotBetween(Boolean value1, Boolean value2) {
			addCriterion("b_enabled not between", value1, value2, "bEnabled");
			return this;
		}
	}
}