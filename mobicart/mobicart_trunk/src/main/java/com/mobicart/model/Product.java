package com.mobicart.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.codehaus.jackson.annotate.JsonIgnore;


@SuppressWarnings("serial")
public class Product implements Serializable{
	
	
	private Long id;
	private Long userId;
	private Long storeId;
	private Long appId;
	private Long departmentId;
	private Long categoryId;
	private String sName;
	private String sDescription;
	private BigDecimal fPrice;
	private String sStatus;
	private BigDecimal fDiscount;
	private String sProductUrl;
	private String sVideoTitle;
	private String sVideoUrl;
	private String sSaleLabel;
	private Integer sPurchaseCount;
	private Boolean bFeatured;
	private String departmentName;
	private String categoryName;
	private Integer iPurchaseCount;
	private Integer iViewCount;
	
	private Integer iAggregateQuantity;
	private Integer iToBeShippedQuantity;
	private BigDecimal fDiscountedPrice;
	private List<ProductImage> productImages;
	
	private List<ProductOption> productOptions;
	private List<ProductReview> productReviews;
	private String sIPhoneStatus;
	private Boolean bTaxable;
	private Boolean bStockControl=false;
	private Boolean bUseOptions=false;
	private Double fAverageRating;
	
	private BigDecimal  fTax;
	private BigDecimal  fTaxOnFPrice;
	private String sTaxType;
	private Long maxRowNum;
	
	
	
	/**
	 * This method was generated by Apache iBATIS ibator. This method returns the value of the database column products.b_use_options
	 * @return  the value of products.b_use_options
	 * @ibatorgenerated  Tue Dec 14 16:02:03 IST 2010
	 */
	public Boolean getbUseOptions() {
		return bUseOptions;
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method sets the value of the database column products.b_use_options
	 * @param bUseOptions  the value for products.b_use_options
	 * @ibatorgenerated  Tue Dec 14 16:02:03 IST 2010
	 */
	public void setbUseOptions(Boolean bUseOptions) {
		this.bUseOptions = bUseOptions;
	}
	


	public Boolean getbStockControl() {
		return bStockControl;
	}
	public void setbStockControl(Boolean bStockControl) {
		this.bStockControl = bStockControl;
	}
	
	
	public Boolean getbTaxable() {
		return bTaxable;
	}
	public void setbTaxable(Boolean bTaxable) {
		this.bTaxable = bTaxable;
	}


	public Product() {
		super();
	}

	public Product(Long id) {
		super();
		this.id = id;
	}


	
	public Integer getiPurchaseCount() {
		return iPurchaseCount;
	}

	public void setiPurchaseCount(Integer iPurchaseCount) {
		this.iPurchaseCount = iPurchaseCount;
	}

	
	public Integer getiViewCount() {
		return iViewCount;
	}

	public void setiViewCount(Integer iViewCount) {
		this.iViewCount = iViewCount;
	}

	
	
	public Integer getiAggregateQuantity() {
		return iAggregateQuantity!=null?iAggregateQuantity:-1;
	}

	public void setiAggregateQuantity(Integer iAggregateQuantity) {
		this.iAggregateQuantity = iAggregateQuantity;
	}

	
	
	public Integer getiToBeShippedQuantity() {
		return iToBeShippedQuantity!=null?iToBeShippedQuantity:-1;
	}

	public void setiToBeShippedQuantity(Integer iToBeShippedQuantity) {
		this.iToBeShippedQuantity = iToBeShippedQuantity;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Long getUserId() {
		return userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	public Long getStoreId() {
		return storeId;
	}

	public void setStoreId(Long storeId) {
		this.storeId = storeId;
	}

	public Long getAppId() {
		return appId;
	}

	public void setAppId(Long appId) {
		this.appId = appId;
	}

	public Long getDepartmentId() {
		return departmentId;
	}

	public void setDepartmentId(Long departmentId) {
		this.departmentId = departmentId;
	}

	public Long getCategoryId() {
		return categoryId;
	}

	public void setCategoryId(Long categoryId) {
		this.categoryId = categoryId;
	}

	public String getsName() {
		return sName;
	}

	public void setsName(String sName) {
		this.sName = sName;
	}

	public String getsDescription() {
		return sDescription;
	}

	public void setsDescription(String sDescription) {
		this.sDescription = sDescription;
	}

	public BigDecimal getfPrice() {
		return fPrice;
	}

	public void setfPrice(BigDecimal fPrice) {
		this.fPrice = fPrice;
	}

	public String getsStatus() {
		return sStatus;
	}

	public void setsStatus(String sStatus) {
		this.sStatus = sStatus;
	}

	public BigDecimal getfDiscount() {
		return fDiscount;
	}

	public void setfDiscount(BigDecimal fDiscount) {
		this.fDiscount = fDiscount;
	}

	public String getsProductUrl() {
		return sProductUrl;
	}

	public void setsProductUrl(String sProductUrl) {
		this.sProductUrl = sProductUrl;
	}

	public String getsVideoTitle() {
		return sVideoTitle;
	}

	public void setsVideoTitle(String sVideoTitle) {
		this.sVideoTitle = sVideoTitle;
	}

	public String getsVideoUrl() {
		return sVideoUrl;
	}

	public void setsVideoUrl(String sVideoUrl) {
		this.sVideoUrl = sVideoUrl;
	}

	public String getsSaleLabel() {
		return sSaleLabel;
	}

	public void setsSaleLabel(String sSaleLabel) {
		this.sSaleLabel = sSaleLabel;
	}

	public Integer getsPurchaseCount() {
		return sPurchaseCount;
	}

	public void setsPurchaseCount(Integer sPurchaseCount) {
		this.sPurchaseCount = sPurchaseCount;
	}

	public Boolean getbFeatured() {
		return bFeatured;
	}

	public void setbFeatured(Boolean bFeatured) {
		this.bFeatured = bFeatured;
	}


	public List<ProductImage> getProductImages() {
		
		return productImages;
	}

	public void setProductImages(List<ProductImage> productImages) {
		this.productImages = productImages;
	}

	public List<ProductOption> getProductOptions() {
		
		return productOptions;
	}

	public void setProductOptions(List<ProductOption> productOptions) {
		this.productOptions = productOptions;
	}
	
	
	public String getDepartmentName() {
		return departmentName;
	}

	public void setDepartmentName(String departmentName) {
		this.departmentName = departmentName;
	}

	public String getCategoryName() {
		return categoryName;
	}

	public void setCategoryName(String categoryName) {
		this.categoryName = categoryName;
	}

	
	public BigDecimal getfDiscountedPrice() {
	
		fDiscountedPrice=fDiscount!=null?fPrice.subtract(fPrice.multiply(fDiscount).divide(new BigDecimal(100))):null;
		return fDiscountedPrice;
	}

	
	
	public String getsIPhoneStatus() {

		/*try{
		if(iAggregateQuantity!=0 && bStockControl==true ){
			this.sIPhoneStatus=	this.sStatus;
		}else if(iAggregateQuantity==0 && bStockControl==true ){
			this.sIPhoneStatus="sold";
		}else if(productOptions==null&&bUseOptions==true){
			this.sIPhoneStatus="sold";
		}else{
			this.sIPhoneStatus=	this.sStatus;
		}
		
		
		}catch(Exception e){
			//logger.error("iphone-status "+e.getLocalizedMessage());
			this.sIPhoneStatus=	this.sStatus;
		}*/
		this.sIPhoneStatus=this.sStatus;
		return this.sIPhoneStatus;
	}

	
	

	public void setfDiscountedPrice(BigDecimal fDiscountedPrice) {
		this.fDiscountedPrice = fDiscountedPrice;
	}

	public void setsIPhoneStatus(String sIPhoneStatus) {
		this.sIPhoneStatus = sIPhoneStatus;
	}

	
	
	
	
	public List<ProductReview> getProductReviews() {
		return productReviews;
	}
	public void setProductReviews(List<ProductReview> productReviews) {
		this.productReviews = productReviews;
	}
	
	
	
	public Double getfAverageRating() {
		try{
		
		Map<String,Integer> ratingValues=new HashMap<String,Integer>();
		for (ProductReview productReview : productReviews) {
			ratingValues.put(productReview.getsReviewerEmail(), productReview.getiRating());
		}
		 BigDecimal sum = BigDecimal.ZERO;
		 for (Integer rating : ratingValues.values()) {
			 sum=sum.add(new BigDecimal(rating));
		}
		 
		 BigDecimal size=new BigDecimal(ratingValues.values().size());
		 if(!size.equals(0))
	     fAverageRating = (sum.divide(size)).doubleValue();
	     
		}catch (Exception e) {
		//	e.printStackTrace();
		}
		return fAverageRating;
	}
	public void setfAverageRating(Double fAverageRating) {
		try{
		this.fAverageRating = fAverageRating;
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	public BigDecimal getfTax() {
		return fTax;
	}
	public void setfTax(BigDecimal fTax) {
		this.fTax = fTax;
	}
	public BigDecimal getfTaxOnFPrice() {
		return fTaxOnFPrice;
	}
	public void setfTaxOnFPrice(BigDecimal fTaxOnFPrice) {
		this.fTaxOnFPrice = fTaxOnFPrice;
	}
	public String getsTaxType() {
		return sTaxType;
	}
	public void setsTaxType(String sTaxType) {
		this.sTaxType = sTaxType;
	}
	@Override
	public String toString() {
		return "Product [id=" + id + ", userId=" + userId + ", storeId="
				+ storeId + ", appId=" + appId + ", departmentId="
				+ departmentId + ", categoryId=" + categoryId + ", sName="
				+ sName + ", sDescription=" + sDescription + ", fPrice="
				+ fPrice + ", sStatus=" + sStatus + ", fDiscount=" + fDiscount
				+ ", sProductUrl=" + sProductUrl + ", sVideoTitle="
				+ sVideoTitle + ", sVideoUrl=" + sVideoUrl + ", sSaleLabel="
				+ sSaleLabel + ", sPurchaseCount=" + sPurchaseCount
				+ ", bFeatured=" + bFeatured + ", productImages="
				+ productImages + ", productOptions=" + productOptions + "]";
	}

	

	public static final Comparator<Product> AGGREGATE_QUANTITY_ORDER =
        new Comparator<Product>() {
		public int compare(Product p1, Product p2) {
				Integer p1Quant=p1.getiAggregateQuantity()!=null?p1.getiAggregateQuantity():0;
				Integer p2Quant=p2.getiAggregateQuantity()!=null?p2.getiAggregateQuantity():0;
				return p1Quant.compareTo(p2Quant);
		}
	};
	
	
	
	public static final Comparator<Product> SHIPPED_QUANTITY_ORDER =
        new Comparator<Product>() {
		public int compare(Product p1, Product p2) {
				return p1.getiToBeShippedQuantity().compareTo(p2.getiToBeShippedQuantity());
		}
	};
	

	public static final Comparator<Product> STATUS_ORDER =
        new Comparator<Product>() {
		public int compare(Product p1, Product p2) {
				return p1.getsStatus().compareTo(p2.getsStatus());
		}
	};



	public Long getMaxRowNum() {
		return maxRowNum;
	}
	public void setMaxRowNum(Long maxRowNum) {
		this.maxRowNum = maxRowNum;
	}

	
	
	public void reset(){
		this.id = null;
		this.userId = null;
		this.storeId = null;
		this.appId = null;
		this.departmentId = null;
		this.categoryId = null;
		this.sName = null;
		this.sDescription = null;
		this.fPrice = null;
		this.sStatus = null;
		this.fDiscount = null;
		this.sProductUrl = null;
		this.sVideoTitle = null;
		this.sVideoUrl = null;
		this.sSaleLabel = null;
		this.sPurchaseCount = null;
		this.bFeatured = null;
		this.departmentName = null;
		this.categoryName = null;
		this.iPurchaseCount = null;
		this.iViewCount = null;
		this.iAggregateQuantity = null;
		this.iToBeShippedQuantity = null;
		this.fDiscountedPrice = null;
		this.productImages = null;
		this.productOptions = null;
		this.productReviews = null;
		this.sIPhoneStatus = null;
		this.bTaxable = null;
		this.bStockControl = null;
		this.bUseOptions = null;
		this.fAverageRating = null;
		this.fTax = null;
		this.fTaxOnFPrice = null;
		this.sTaxType = null;
		this.maxRowNum = null;
	}
	
	
}