package com.mobicart.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class PaymentCardExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public PaymentCardExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected PaymentCardExample(PaymentCardExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table users_payment_card
	 * @ibatorgenerated  Tue Aug 03 16:33:41 IST 2010
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andUserIdIsNull() {
			addCriterion("user_id is null");
			return this;
		}

		public Criteria andUserIdIsNotNull() {
			addCriterion("user_id is not null");
			return this;
		}

		public Criteria andUserIdEqualTo(Long value) {
			addCriterion("user_id =", value, "userId");
			return this;
		}

		public Criteria andUserIdNotEqualTo(Long value) {
			addCriterion("user_id <>", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThan(Long value) {
			addCriterion("user_id >", value, "userId");
			return this;
		}

		public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
			addCriterion("user_id >=", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThan(Long value) {
			addCriterion("user_id <", value, "userId");
			return this;
		}

		public Criteria andUserIdLessThanOrEqualTo(Long value) {
			addCriterion("user_id <=", value, "userId");
			return this;
		}

		public Criteria andUserIdIn(List values) {
			addCriterion("user_id in", values, "userId");
			return this;
		}

		public Criteria andUserIdNotIn(List values) {
			addCriterion("user_id not in", values, "userId");
			return this;
		}

		public Criteria andUserIdBetween(Long value1, Long value2) {
			addCriterion("user_id between", value1, value2, "userId");
			return this;
		}

		public Criteria andUserIdNotBetween(Long value1, Long value2) {
			addCriterion("user_id not between", value1, value2, "userId");
			return this;
		}

		public Criteria andSNameIsNull() {
			addCriterion("s_name is null");
			return this;
		}

		public Criteria andSNameIsNotNull() {
			addCriterion("s_name is not null");
			return this;
		}

		public Criteria andSNameEqualTo(String value) {
			addCriterion("s_name =", value, "sName");
			return this;
		}

		public Criteria andSNameNotEqualTo(String value) {
			addCriterion("s_name <>", value, "sName");
			return this;
		}

		public Criteria andSNameGreaterThan(String value) {
			addCriterion("s_name >", value, "sName");
			return this;
		}

		public Criteria andSNameGreaterThanOrEqualTo(String value) {
			addCriterion("s_name >=", value, "sName");
			return this;
		}

		public Criteria andSNameLessThan(String value) {
			addCriterion("s_name <", value, "sName");
			return this;
		}

		public Criteria andSNameLessThanOrEqualTo(String value) {
			addCriterion("s_name <=", value, "sName");
			return this;
		}

		public Criteria andSNameLike(String value) {
			addCriterion("s_name like", value, "sName");
			return this;
		}

		public Criteria andSNameNotLike(String value) {
			addCriterion("s_name not like", value, "sName");
			return this;
		}

		public Criteria andSNameIn(List values) {
			addCriterion("s_name in", values, "sName");
			return this;
		}

		public Criteria andSNameNotIn(List values) {
			addCriterion("s_name not in", values, "sName");
			return this;
		}

		public Criteria andSNameBetween(String value1, String value2) {
			addCriterion("s_name between", value1, value2, "sName");
			return this;
		}

		public Criteria andSNameNotBetween(String value1, String value2) {
			addCriterion("s_name not between", value1, value2, "sName");
			return this;
		}

		public Criteria andSNumberIsNull() {
			addCriterion("s_number is null");
			return this;
		}

		public Criteria andSNumberIsNotNull() {
			addCriterion("s_number is not null");
			return this;
		}

		public Criteria andSNumberEqualTo(String value) {
			addCriterion("s_number =", value, "sNumber");
			return this;
		}

		public Criteria andSNumberNotEqualTo(String value) {
			addCriterion("s_number <>", value, "sNumber");
			return this;
		}

		public Criteria andSNumberGreaterThan(String value) {
			addCriterion("s_number >", value, "sNumber");
			return this;
		}

		public Criteria andSNumberGreaterThanOrEqualTo(String value) {
			addCriterion("s_number >=", value, "sNumber");
			return this;
		}

		public Criteria andSNumberLessThan(String value) {
			addCriterion("s_number <", value, "sNumber");
			return this;
		}

		public Criteria andSNumberLessThanOrEqualTo(String value) {
			addCriterion("s_number <=", value, "sNumber");
			return this;
		}

		public Criteria andSNumberLike(String value) {
			addCriterion("s_number like", value, "sNumber");
			return this;
		}

		public Criteria andSNumberNotLike(String value) {
			addCriterion("s_number not like", value, "sNumber");
			return this;
		}

		public Criteria andSNumberIn(List values) {
			addCriterion("s_number in", values, "sNumber");
			return this;
		}

		public Criteria andSNumberNotIn(List values) {
			addCriterion("s_number not in", values, "sNumber");
			return this;
		}

		public Criteria andSNumberBetween(String value1, String value2) {
			addCriterion("s_number between", value1, value2, "sNumber");
			return this;
		}

		public Criteria andSNumberNotBetween(String value1, String value2) {
			addCriterion("s_number not between", value1, value2, "sNumber");
			return this;
		}

		public Criteria andSCvvIsNull() {
			addCriterion("s_cvv is null");
			return this;
		}

		public Criteria andSCvvIsNotNull() {
			addCriterion("s_cvv is not null");
			return this;
		}

		public Criteria andSCvvEqualTo(String value) {
			addCriterion("s_cvv =", value, "sCvv");
			return this;
		}

		public Criteria andSCvvNotEqualTo(String value) {
			addCriterion("s_cvv <>", value, "sCvv");
			return this;
		}

		public Criteria andSCvvGreaterThan(String value) {
			addCriterion("s_cvv >", value, "sCvv");
			return this;
		}

		public Criteria andSCvvGreaterThanOrEqualTo(String value) {
			addCriterion("s_cvv >=", value, "sCvv");
			return this;
		}

		public Criteria andSCvvLessThan(String value) {
			addCriterion("s_cvv <", value, "sCvv");
			return this;
		}

		public Criteria andSCvvLessThanOrEqualTo(String value) {
			addCriterion("s_cvv <=", value, "sCvv");
			return this;
		}

		public Criteria andSCvvLike(String value) {
			addCriterion("s_cvv like", value, "sCvv");
			return this;
		}

		public Criteria andSCvvNotLike(String value) {
			addCriterion("s_cvv not like", value, "sCvv");
			return this;
		}

		public Criteria andSCvvIn(List values) {
			addCriterion("s_cvv in", values, "sCvv");
			return this;
		}

		public Criteria andSCvvNotIn(List values) {
			addCriterion("s_cvv not in", values, "sCvv");
			return this;
		}

		public Criteria andSCvvBetween(String value1, String value2) {
			addCriterion("s_cvv between", value1, value2, "sCvv");
			return this;
		}

		public Criteria andSCvvNotBetween(String value1, String value2) {
			addCriterion("s_cvv not between", value1, value2, "sCvv");
			return this;
		}

		public Criteria andDExpiryDateIsNull() {
			addCriterion("d_expiry_date is null");
			return this;
		}

		public Criteria andDExpiryDateIsNotNull() {
			addCriterion("d_expiry_date is not null");
			return this;
		}

		public Criteria andDExpiryDateEqualTo(Date value) {
			addCriterionForJDBCDate("d_expiry_date =", value, "dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("d_expiry_date <>", value, "dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateGreaterThan(Date value) {
			addCriterionForJDBCDate("d_expiry_date >", value, "dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("d_expiry_date >=", value, "dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateLessThan(Date value) {
			addCriterionForJDBCDate("d_expiry_date <", value, "dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("d_expiry_date <=", value, "dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateIn(List values) {
			addCriterionForJDBCDate("d_expiry_date in", values, "dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateNotIn(List values) {
			addCriterionForJDBCDate("d_expiry_date not in", values,
					"dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("d_expiry_date between", value1, value2,
					"dExpiryDate");
			return this;
		}

		public Criteria andDExpiryDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("d_expiry_date not between", value1,
					value2, "dExpiryDate");
			return this;
		}
	}
}