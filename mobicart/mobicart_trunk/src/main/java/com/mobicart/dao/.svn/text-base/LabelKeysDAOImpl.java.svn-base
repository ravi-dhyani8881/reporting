package com.mobicart.dao;

import java.sql.SQLException;
import java.util.List;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.mobicart.dto.LabelsDto;
import com.mobicart.model.LabelKeys;
import com.mobicart.model.LabelKeysExample;
import com.mobicart.model.User;

public class LabelKeysDAOImpl  extends SqlMapClientDaoSupport implements LabelKeysDAO {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	//private SqlMapClient sqlMapClient;

	
	public LabelKeysDAOImpl() {
		// TODO Auto-generated constructor stub
	}
	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	/*public LabelKeysDAOImpl(SqlMapClient sqlMapClient) {
		super();
		this.sqlMapClient = sqlMapClient;
	}*/

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public int countLabelKeysByExample(LabelKeysExample example)
			throws SQLException {
		Integer count = (Integer) getSqlMapClientTemplate().queryForObject(
				"label_keys.ibatorgenerated_countByExample", example);
		return count.intValue();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public int deleteLabelKeysByExample(LabelKeysExample example)
			throws SQLException {
		int rows = getSqlMapClientTemplate().delete(
				"label_keys.ibatorgenerated_deleteByExample", example);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public int deleteLabelKeysByPrimaryKey(Integer labelKeyId)
			throws SQLException {
		LabelKeys key = new LabelKeys();
		key.setLabelKeyId(labelKeyId);
		int rows = getSqlMapClientTemplate().delete(
				"label_keys.ibatorgenerated_deleteByPrimaryKey", key);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public void insertLabelKeys(LabelKeys record) throws SQLException {
		getSqlMapClientTemplate().insert("label_keys.ibatorgenerated_insert", record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public void insertLabelKeysSelective(LabelKeys record) throws SQLException {
		getSqlMapClientTemplate().insert("label_keys.ibatorgenerated_insertSelective",
				record);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public List selectLabelKeysByExample(LabelKeysExample example)
			throws SQLException {
		List list = getSqlMapClientTemplate().queryForList(
				"label_keys.ibatorgenerated_selectByExample", example);
		return list;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public LabelKeys selectLabelKeysByPrimaryKey(Integer labelKeyId)
			throws SQLException {
		LabelKeys key = new LabelKeys();
		key.setLabelKeyId(labelKeyId);
		LabelKeys record = (LabelKeys) getSqlMapClientTemplate().queryForObject(
				"label_keys.ibatorgenerated_selectByPrimaryKey", key);
		return record;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public int updateLabelKeysByExampleSelective(LabelKeys record,
			LabelKeysExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"label_keys.ibatorgenerated_updateByExampleSelective", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public int updateLabelKeysByExample(LabelKeys record,
			LabelKeysExample example) throws SQLException {
		UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
		int rows = getSqlMapClientTemplate().update(
				"label_keys.ibatorgenerated_updateByExample", parms);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public int updateLabelKeysByPrimaryKeySelective(LabelKeys record)
			throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"label_keys.ibatorgenerated_updateByPrimaryKeySelective",
				record);
		return rows;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	public int updateLabelKeysByPrimaryKey(LabelKeys record)
			throws SQLException {
		int rows = getSqlMapClientTemplate().update(
				"label_keys.ibatorgenerated_updateByPrimaryKey", record);
		return rows;
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table label_keys
	 * @ibatorgenerated  Tue Jun 28 17:25:47 IST 2011
	 */
	private static class UpdateByExampleParms extends LabelKeysExample {
		private Object record;

		public UpdateByExampleParms(Object record, LabelKeysExample example) {
			super(example);
			this.record = record;
		}

		public Object getRecord() {
			return record;
		}
	}
	
	public List<LabelsDto> selectAllDefaultLabelKeyValues(User user) throws SQLException {
		List<LabelsDto> labelsDtoList = getSqlMapClientTemplate().queryForList("label_keys.selectAllLabelsByMerchantId",user.getId());
		return labelsDtoList;
	}

	@Override
	public List<LabelsDto> selectAllLabels() throws SQLException {
		List<LabelsDto> labelsDtoList = getSqlMapClientTemplate().queryForList("label_keys.selectAllLabels");
		return labelsDtoList;
	}
	
	
	
}
